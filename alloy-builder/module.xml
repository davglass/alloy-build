<?xml version="1.0" encoding="UTF-8"?>

<project name="YuiModuleTargets">

    <import file="${builddir}/shared/targets.xml" description="Targets common to Rollup/Module" />

    <target name="build" depends="buildcore, -rollupjs, buildskins" />
    <target name="buildskins" depends="-buildskins, -rollupcss" />

    <!-- CORE -->
    <target name="buildcore" depends="builddebug, -createcore, -loggerregex" description="Create component.js">
        <fixcrlf srcdir="${component.builddir}" includes="${component.basefilename}.js" eol="${buildfiles.eol}" />
    </target>

    <target name="-createcore">
        <copy file="${component.builddir}/${component.basefilename}-debug.js" tofile="${component.builddir}/${component.basefilename}.js" />
    </target>

    <target name="-loggerregex" description="Replace logger statements" unless="component.logger.regex.skip">
        <echo level="info">Replacing Logger Statements in ${component.builddir}/${component.basefilename}.js</echo>
        <replaceregexp file="${component.builddir}/${component.basefilename}.js"
                            byline="${component.logger.regex.byline}"
                            match="${component.logger.regex}"
                            replace="${component.logger.regex.replace}"
                            flags="${component.logger.regex.flags}" />
    </target>

    <!-- DEBUG -->
    <target name="builddebug" depends="-concatdebug, -registerdebug, -prependdebug, -appenddebug" description="Create component-debug.js">
        <fixcrlf srcdir="${component.builddir}" includes="${component.basefilename}-debug.js" eol="${buildfiles.eol}" />
    </target>

    <target name="-concatdebug">
        <concatsource destfile="${component.builddir}/${component.basefilename}-debug.js" sourcedir="${component.jsfiles.base}" sourcefiles="${component.jsfiles}" />
    </target>

    <target name="-registerdebug" unless="register.skip">
        <addmodule module="${component.module}" file="${component.builddir}/${component.basefilename}-debug.js" details="${component.details.hash}" />
    </target>

    <target name="-rollupjs" if="rollup">
        <echo level="info">Rolling up ${component.basefilename}-debug.js into ${rollup.component.basefilename}-debug.js</echo>
        <concat destfile="${rollup.builddir}/${rollup.component.basefilename}.js" append="true" fixlastline="true">
            <filelist dir="${component.builddir}" files="${component.basefilename}.js" />
        </concat>
        <concat destfile="${rollup.builddir}/${rollup.component.basefilename}-debug.js" append="true" fixlastline="true">
            <filelist dir="${component.builddir}" files="${component.basefilename}-debug.js" />
        </concat>
    </target>

    <!-- SKINS -->
    <target name="-buildskins" depends="-concatskins" description="Create skin rollup in local component build directory" if="component.skins.exist">
        <fixcrlf srcdir="${component.builddir}/assets/skins/sam" includes="${component}.css" eol="${buildfiles.eol}" />
    </target>

    <target name="-concatskins" if="component.skins.exist">
        <concatsource destfile="${component.builddir}/assets/skins/sam/${component}.css" sourcedir="${component.assets.base}" sourcefiles="${component}-core.css, skins/sam/${component}-skin.css" />
        <yuicompress src="${component.builddir}/assets/skins/sam/${component}.css" dest="${component.builddir}/assets/skins/sam/${component}.css" args="${yuicompressor.css.args.internal}" />
    </target>

    <target name="-rollupcss" if="rollup.skins.exist">
        <echo level="info">Rolling up ${component}.css into ${rollup.component}.css</echo>
        <concat destfile="${rollup.builddir}/assets/skins/sam/${rollup.component}.css" append="true" fixlastline="true">
            <filelist dir="${component.builddir}/assets/skins/sam" files="${component}.css" />
        </concat>
    </target>

    <macrodef name="addmodule">
        <attribute name="file" />
        <attribute name="module" />
        <attribute name="details" default="" />

        <sequential>
            <if>
                <equals arg1="@{details}" arg2="" />
                <then>
                    <property name="@{module}-details" value="" />
                </then>
                <else>
                    <property name="@{module}-details" value=",@{details}" />
                </else>
            </if>
            <loadfile srcfile="@{file}" property="@{module}-@{file}-code" />
            <echo level="info">Wrapping @{file} in AUI.add module</echo>
            <copy file="${builddir}/alloy/moduletemplate.txt" tofile="@{file}" overwrite="true">
                <filterset>
                    <filter token="CODE" value="${@{module}-@{file}-code}" />
                    <filter token="YUIVAR" value="${yui.variable}" />
                    <filter token="MODULE" value="@{module}" />
                    <filter token="DETAILS" value="${@{module}-details}" />
                </filterset>
            </copy>
        </sequential>
    </macrodef>

</project>
